# -*- coding: utf-8 -*-
"""SOM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ikGAD-FFCOsp2ek12Cxk74em6ee6-6DK

#Self Organizing Map

##Install MiniSom Package

### Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_csv('Credit_Card_Applications.csv')
x = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1].values

"""## Feature Scaling

"""

from sklearn.preprocessing import MinMaxScaler
sc = MinMaxScaler(feature_range=(0,1))
x = sc.fit_transform(x)

"""##Training the SOM

"""

from minisom import MiniSom
som = MiniSom(x=10, y=10, input_len=15)
#initialize weights
som.random_weights_init(x)
som.train_random(x, num_iteration=100)

"""##Visualizing the results

"""

from pylab import bone, pcolor, colorbar, plot, show
bone()
pcolor(som.distance_map().T)
colorbar()
markers = ['o', 's']
colors = ['r', 'g']
for row, vector in enumerate(x):
  w = som.winner(vector)
  plot(w[0]+0.5, w[1]+0.5, markers[y[row]], markeredgecolor = colors[y[row]], markerfacecolor = 'None', markersize = 10, markeredgewidth = 2)
show()

"""## Finding the frauds

"""

mappings = som.win_map(x)

frauds = np.concatenate((mappings[(8,1)], mappings[(6,9)]), axis = 0)
frauds = sc.inverse_transform(frauds)

"""##Printing the Fraunch Clients"""

print("Probable Fraud Customer IDs are: ")
for id in frauds:
  print(id)

